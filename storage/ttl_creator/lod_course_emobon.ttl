

# the event
<{{uritexpand("https://data.emobon.embrc.eu/id/materialsample/{sampling_event}", _)}}>
    a emobon:Event;
    dwc:eventDate "{{_['collection_date']}}";
    {%- for emo_obs in sets['emo_obs']%}
    dwc:waterBody "{{emo_obs['loc_broad_ocean']}},{{emo_obs['loc_loc']}},{{emo_obs['loc_regional']}}" ;
    dwc:decimalLatitude "{{emo_obs['latitude']}}" ; 
    dwc:decimalLongitude "{{emo_obs['longitude']}}" ;
    schema:Contributor 
    [ 
        {%- for organization_edmoid in emo_obs['organization_edmoid'].split(',') %}
        {#make sure there are no whitespaces in the value organization_edmoid else change to value organization_edmoid to have no spaces#}
        {%- if organization_edmoid.find(' ') != -1 -%}
        {%- set organization_edmoid = organization_edmoid.replace(' ', '') -%}
        {%- endif -%}
        schema:isMemberOf <https://edmo.seadatanet.org/report/{{organization_edmoid}}> ; 
        {%- endfor %}
        {%- endfor %}
        schema:name "{{_['sampl_person']}}";
        schema:identifier  "{{_['sampl_person_orcid']}}" ;
    ] ;
    schema:range emobon:sedimentSample ;
    dwc:eventID "{{_['sampling_event']}}" .
    
# the material sample
<{{uritexpand("https://data.emobon.embrc.eu/id/materialsample/{source_mat_id}", _)}}>
    a emobon:SedimentSample;
    sosa:isResultOf <{{uritexpand("https://data.emobon.embrc.eu/id/materialsample/{sampling_event}", _)}}>;
    {% for col_description in sets['col_md'] %}		
    {%- if col_description['Logsheet type'] == 'both' or col_description['Logsheet type'] == 'sediment' -%}
    {%- if _[col_description['Parameter']]|length -%}
    sosa:hasResult a emobon:EnvironmentalMeasurement
    [
        rdf:label "{{col_description['Parameter'] | ttl('xsd:string')}}";
        dbg:datatype "{{col_description['Data type'] | ttl('xsd:string')}}";
        dwc:measurementValue {{_[col_description['Parameter']] | ttl(col_description['Data type'])}};
        {%- if col_description['Linked term (URL)']|length and col_description['Linked term (URL)'] != 'NA' %}
        sosa:observedProperty  <{{col_description['Linked term (URL)']}}>;
        {%- endif -%}
        {%- if col_description['Unit (URL)']|length and col_description['Unit (URL)'] != 'NA' %}
        dwc:measurementUnit <{{col_description['Unit (URL)']}}>;
        {%- endif %}
    ];
    {% endif -%}
    {%- endif -%}
    {%- endfor -%} 
    dwc:MaterialSampleID "{{_['source_mat_id']}}".